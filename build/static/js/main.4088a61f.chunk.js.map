{"version":3,"sources":["containers/home.js","utils/hash.js","ssr/index.js","containers/details.js","component/show-comments.js","containers/list.js","containers/not-found.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","hash","x","hashCode","value","JSON","stringify","isSSR","window","document","createElement","useStaticContext","useContext","__RouterContext","staticContext","useClientFetch","operation","skip","cacheKey","useState","fetchData","setFetchData","loading","setLoading","error","setError","useEffect","a","axios","data","refetch","useSsrFetch","ssrData","useSsrFetchState","context","ssrRequest","useCallback","console","log","promiAxios","poolFetches","push","Promise","resolve","reject","then","result","set","catch","__ssrFetchForce__","defaultValue","get","fetch","__ssrFetch__","OPERATION","url","Details","results","ShowPerson","postId","length","map","comments","name","id","List","slice","item","title","body","NotFound","status","Container","styled","div","App","to","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","hydrate","getElementById"],"mappings":"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","file":"static/js/main.4088a61f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Home = props => {\n  return <h1>Home</h1>;\n};\n\nexport default Home;","import { hashCode } from \"hashcode\";\n\nexport const hash = (x) => {\n  return hashCode().value(JSON.stringify(x))\n};\n","// eslint-disable-next-line no-unused-vars\nimport React, { useEffect, useState, useContext, useCallback } from \"react\";\nimport { __RouterContext } from \"react-router\";\nimport axios from \"axios\";\n\nimport { hash } from \"./../utils/hash\";\n\nconst isSSR = !(\n  typeof window !== \"undefined\" &&\n  window.document &&\n  window.document.createElement\n);\n\nexport const useStaticContext = () => useContext(__RouterContext).staticContext;\n\nexport const useClientFetch = (operation, skip = false) => {\n  const cacheKey = hash(operation);\n\n  const [fetchData, setFetchData] = useState();\n  const [loading, setLoading] = useState(!skip);\n  const [error, setError] = useState(null);\n\n  // ssr will ignore useEffect\n  useEffect(() => {\n    if (skip) return;\n\n    const refetch = async (operation) => {\n      setLoading(true);\n      try {\n        const { data } = await axios(operation);\n        setFetchData(data);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    refetch(operation);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey, skip]);\n\n  return {\n    data: fetchData,\n    loading,\n    error,\n  };\n};\n\n// this will tell to ssr to wait this fetch until resolve and then render again\nexport const useSsrFetch = (operation) => {\n  const cacheKey = hash(operation);\n  let ssrData = useSsrFetchState(cacheKey);\n\n  const context = useStaticContext();\n\n  // set on pool of ssr fetches the current fetch\n  const ssrRequest = useCallback(\n    (operation) => {\n      console.log(\"ssrRequest\");\n      const promiAxios = axios(operation);\n      context.poolFetches.push(\n        new Promise((resolve, reject) => {\n          promiAxios\n            .then((result) => {\n              context.set(cacheKey, result.data);\n              resolve();\n            })\n            .catch(reject);\n        })\n      );\n    },\n    [context, cacheKey]\n  );\n\n  if (isSSR && !ssrData) ssrRequest(operation);\n\n  const { data: fetchData, loading, error } = useClientFetch(\n    operation,\n    !!ssrData && !(typeof window !== \"undefined\" && window.__ssrFetchForce__)\n  );\n\n  return {\n    data: fetchData || ssrData,\n    loading: ssrData ? false : loading,\n    error,\n  };\n};\n\nconst useSsrFetchState = (cacheKey, defaultValue) => {\n  const context = useStaticContext();\n  if (context && context.get) {\n    const data = context.get(cacheKey);\n    if (data) {\n      return data;\n    }\n  }\n\n  if (context && context.fetch && context.fetch[cacheKey])\n    return context.fetch[cacheKey];\n\n  if (!isSSR && window.__ssrFetch__ && window.__ssrFetch__[cacheKey])\n    return window.__ssrFetch__[cacheKey];\n\n  if (context) context.fetch[cacheKey] = defaultValue;\n  return defaultValue;\n};\n","import React from 'react';\n\nimport { useClientFetch } from \"../ssr\";\n\nconst OPERATION =  ({\n  url: `http://localhost:3010/photos`,\n});\nconst Details = props => {\n  const { data, loading } = useClientFetch(OPERATION);\n\n  if (loading) return <div>Loading...</div>;\n\n  const results = data;\n\n  console.log(\"show photos\", results);\n\n  return <h1>Details</h1>;\n};\n\nexport default Details;","import React from \"react\";\n\nimport { useSsrFetch } from \"../ssr\";\n\nconst getOperation = (postId) => ({\n  url: `http://localhost:3010/posts/${postId}/comments`,\n});\n\nconst ShowPerson = (props) => {\n  const { data, loading } = useSsrFetch(getOperation(props.postId));\n\n  if (loading) return <div>Loading...</div>;\n\n  const results = data;\n\n  console.log(\"show comments\", results);\n\n  return (\n    <div>\n      <h5>Show comments {results.length}</h5>\n      {results.map((comments) => (\n        <div key={comments.id}>{comments.name}</div>\n      ))}\n    </div>\n  );\n};\n\nexport default ShowPerson;\n","import React from \"react\";\nimport { useSsrFetch } from \"./../ssr\";\n\nimport ShowComments from \"../component/show-comments\";\n\nconst OPERATION = {\n  url: \"http://localhost:3010/posts\",\n};\n\nconst List = (props) => {\n  const { data, loading } = useSsrFetch(OPERATION);\n\n  if (loading) return <div>Loading...</div>;\n\n  const results = data;\n\n  return (\n    <div>\n      <h1>List of posts</h1>\n      <hr />\n      <div>\n        {results.slice(0,5).map((item) => (\n          <div key={item.id}>\n            <h2 key={item.id}>{item.title}</h2>\n            <p>{item.body}</p>\n            <ShowComments postId={item.id} />\n            <hr />\n          </div>\n        ))}\n      </div>\n      <hr />\n      <hr />\n    </div>\n  );\n};\n\nexport default List;\n","import React from \"react\";\n\nconst NotFound = ({ staticContext = {} }) => {\n  staticContext.status = 404;\n\n  return <h1>NotFound</h1>;\n};\n\nexport default NotFound;\n","import React, { useEffect } from \"react\";\nimport { Route, Switch, NavLink } from \"react-router-dom\";\nimport styled from \"@emotion/styled\";\n\nimport Home from \"./containers/home\";\nimport Details from \"./containers/details\";\nimport List from \"./containers/list\";\nimport NotFound from \"./containers/not-found\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nfunction App() {\n  useEffect(() => {\n    // window.__ssrFetchForce__ = true;\n  }, []);\n\n  return (\n    <Container>\n      <ul>\n        <li>\n          <NavLink to=\"/\">Home</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/details\">Details</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/list\">List</NavLink>\n        </li>\n      </ul>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/list\" component={List} />\n        <Route path=\"/details\" component={Details} />\n        <Route component={NotFound} />\n      </Switch>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.hydrate(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}